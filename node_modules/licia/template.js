function _typeof(obj) {
    if (typeof Symbol === 'function' && typeof Symbol.iterator === 'symbol') {
        _typeof = function _typeof(obj) {
            return typeof obj;
        };
    } else {
        _typeof = function _typeof(obj) {
            return obj &&
                typeof Symbol === 'function' &&
                obj.constructor === Symbol &&
                obj !== Symbol.prototype
                ? 'symbol'
                : typeof obj;
        };
    }
    return _typeof(obj);
}

var escape = require('./escape');
var defaults = require('./defaults');

var regEvaluate = /<%([\s\S]+?)%>/g,
    regInterpolate = /<%=([\s\S]+?)%>/g,
    regEscape = /<%-([\s\S]+?)%>/g,
    regMatcher = RegExp(
        [regEscape.source, regInterpolate.source, regEvaluate.source].join(
            '|'
        ) + '|$',
        'g'
    );
var escapes = {
    "'": "'",
    '\\': '\\',
    '\r': 'r',
    '\n': 'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
};
var regEscapeChar = /\\|'|\r|\n|\u2028|\u2029/g;

var escapeChar = function escapeChar(match) {
    return '\\' + escapes[match];
};

exports = function exports(str, util) {
    if (!util) {
        util =
            (typeof _ === 'undefined' ? 'undefined' : _typeof(_)) === 'object'
                ? _
                : {
                      escape: escape
                  };
    } else {
        defaults(util, {
            escape: escape
        });
    }

    var index = 0,
        src = "__p+='";
    str.replace(regMatcher, function(
        match,
        escape,
        interpolate,
        evaluate,
        offset
    ) {
        src += str.slice(index, offset).replace(regEscapeChar, escapeChar);
        index = offset + match.length;

        if (escape) {
            src += "'+\n((__t=(" + escape + "))==null?'':util.escape(__t))+\n'";
        } else if (interpolate) {
            src += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
        } else if (evaluate) {
            src += "';\n" + evaluate + "\n__p+='";
        }

        return match;
    });
    src += "';\n";
    src = 'with(obj||{}){\n' + src + '}\n';
    src =
        "var __t,__p='',__j=Array.prototype.join," +
        "print=function(){__p+=__j.call(arguments,'');};\n" +
        src +
        'return __p;\n';
    var render = new Function('obj', 'util', src);
    return function(data) {
        return render.call(null, data, util);
    };
};

module.exports = exports;
